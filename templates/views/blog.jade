extends ../layouts/default

mixin post(post)
	.post(data-ks-editable=editable(user, { list: 'Blog', id: post.id }))
		h2: a(href='/blog/post/' + post.slug + '/')= post.title
		p.lead.text-muted Posted 
			if post.publishedDate
				| on #{post._.publishedDate.format('MMMM Do, YYYY')} 
			if post.categories && post.categories.length
				| in 
				each cat, i in post.categories
					a(href='/blog/' + cat.key + '/')= cat.name
					if i < post.categories.length - 1
						| , 
					else
						|  
			if post.author
				| by #{post.author.name.first}
		if post.thumbnail.exists
			img(src=post._.thumbnail.fit(160,160)).img.pull-right
		p!= post.content.brief
		if post.content.extended
			p.read-more: a(href='/blog/post/' + post.slug + '/')=t("readMoreButton", { defaultValue: "Read more..." })

block heading
	if data.hasHeading
		section.heading
			+slideshow(data.page.heading)

block intro
	section(class=['page', 'page-head'])
		h1= data.category ? data.category.name : data.page.title

		header.navigation.portfolio-navigation#portfolio-navigation

			div.search-controller
				form#search-form(action='', method='post', role='search').search-form
					fieldset
						label.sr-only.sr-only-focusable(for='search')=t("searchLabel", { defaultValue: "Search" })
						div.search-input
							input#search-input(type='text', name='search', placeholder=t("searchLabel", { defaultValue: "Search" }))
						div.search-submit
							button#search-submit(type='submit', title=t("searchButton", { defaultValue: "Search" }), aria-label=t("searchLabel", { defaultValue: "Search" })).btn.btn-search: span.icon-search(aria-hidden='true')
						input(type='hidden', name='action', value='search')

block content
	section.site-content.content-area.has-masonry#content
		.container: .row
			.col-sm-8.col-md-9
				if filters.category && !data.category
					h3.text-muted=t("blogInvalidCategoryText", { defaultValue: "Invalid category." })
				else
					if data.posts.results.length
						if data.posts.totalPages > 1
							h4.text-weight-normal Showing 
								strong #{data.posts.first}
								|  to 
								strong #{data.posts.last}
								|  of 
								strong #{data.posts.total}
								|  posts.
						else
							h4.text-weight-normal Showing #{utils.plural(data.posts.results.length, '* post')}.
						.blog
							each post in data.posts.results
								+post(post)

						if data.posts.totalPages > 1
							ul.pagination
								if data.posts.previous
									li: a(href='?page=' + data.posts.previous): span.glyphicon.glyphicon-chevron-left
								else
									li.disabled: a(href='?page=' + 1): span.glyphicon.glyphicon-chevron-left
								each p, i in data.posts.pages
									li(class=data.posts.currentPage == p ? 'active' : null)
										a(href='?page=' + (p == '...' ? (i ? data.posts.totalPages : 1) : p ))= p
								if data.posts.next
									li: a(href='?page=' + data.posts.next): span.glyphicon.glyphicon-chevron-right
								else
									li.disabled: a(href='?page=' + data.posts.totalPages): span.entypo.glyphicon.glyphicon-chevron-right
					else
						if data.category
							h3.text-muted=t("blogEmptyCategoryText", { postProcess: "sprintf", sprintf: [ data.category.name ], defaultValue: "There are no posts in the category %s." })
						else
							h3.text-muted=t("blogEmptyText", { defaultValue: "There are no posts yet." })